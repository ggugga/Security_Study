// image-storage 문제 속 upload.php
/* 업로드한 파일을 uploads폴더에 복사하며, 이용자는 http://host1.dreamhack.games:[PORT]/uploads/[FILENAME] URL을 통해 접근할 수 있습니다 만약 같은 이름의 파일이 있다면 "already exists"라는 메시지를 반환합니다. 업로드할 파일에 대해 어떠한 검사도 하지 않으므로, 웹 셸 업로드 공격에 취약합니다.*/

<?php
  // 서버로 전송된 HTTP 요청이 POST 방식인지 확인합니다.
  if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // 전송된 파일이 있는지 확인합니다.
    if (isset($_FILES)) {
      $directory = './uploads/'; // 파일이 저장될 디렉토리를 지정합니다.
      $file = $_FILES["file"]; // 전송된 파일 정보를 가져옵니다.
      $error = $file["error"]; // 파일 전송 중 발생한 오류 코드를 가져옵니다.
      $name = $file["name"]; // 전송된 파일의 원래 이름을 가져옵니다.
      $tmp_name = $file["tmp_name"]; // 서버에 저장된 임시 파일의 이름을 가져옵니다.
     
      // 오류가 발생했는지 확인합니다.
      if ($error > 0) {
        // 오류가 발생한 경우 오류 메시지를 출력합니다.
        echo "Error: " . $error . "<br>";
      } else {
        // 동일한 이름의 파일이 이미 존재하는지 확인합니다.
        if (file_exists($directory . $name)) {
          // 파일이 존재하면 해당 메시지를 출력합니다.
          echo $name . " already exists. ";
        } else {
          // 파일을 지정된 디렉토리에 저장합니다.
          if(move_uploaded_file($tmp_name, $directory . $name)){
            // 파일이 성공적으로 저장되면 저장 경로를 출력합니다.
            echo "Stored in: " . $directory . $name;
          }
        }
      }
    } else {
      // 전송된 파일이 없는 경우 오류 메시지를 출력합니다.
      echo "Error !";
    }
    // 스크립트 실행을 종료합니다.
    die();
  }
?>

// 더 알아보기 : 파일 업로드 시 검사 기능 추가
/* (1) max_size 최대 파일 크기를 설정해 파일 크기가 최대 크기를 초과하면 오류 메시지를 출력
(2) allowed_extensions 허용할 파일 확장자 목록을 설정 
+ pathinfo($name, PATHINFO_EXTENSION)파일 확장자를 추출해서 파일 확장자가 허용 목록에 없으면 오류 메시지를 출력 
(3) mime_content_type($tmp_name)를 사용하여 파일의 MIME 타입을 가져오기 
+ allowed_mime_types 허용할 MIME 타입 목록을 설정해서 *파일 MIME 타입이 허용 목록에 없으면 오류 메시지를 출력 */

// MIME 타입이란?
/* 웹에서 데이터를 전송할 때 각 데이터들은 이미지, 데이터, 텍스트, json 등 여러 타입을 가지게 되므로
이 데이터 객체를 판별하가 위해 HTTP헤더에 MIME 헤더를 붙임 -> 파일 종류/ 파일포맷 ex) text/html */
